if (isWeVideoModule.toBoolean()) {
    apply plugin: 'com.android.library'
} else {
    apply plugin: 'com.android.application'
}
apply from: "config.gradle"
def cfg = project.ext.android
def dpc = project.ext.dependencies
android {
    compileSdkVersion cfg.compileSdkVersion

    defaultConfig {
        minSdkVersion cfg.minSdkVersion
        targetSdkVersion cfg.targetSdkVersion
        versionCode cfg.versionCode
        versionName cfg.versionName


        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            if (isWeVideoModule.toBoolean()) {
                manifest.srcFile "src/main/module/AndroidManifest.xml"
            } else {
                manifest.srcFile "src/main/AndroidManifest.xml"
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support.constraint:constraint-layout:$dpc.constraintLayout"
    //noinspection GradleCompatible
    implementation "com.android.support:design:$dpc.design"
    implementation project(':common')
    implementation "com.android.support:appcompat-v7:$dpc.appcompatv7"
    testImplementation "junit:junit:$dpc.junit"
    androidTestImplementation "com.android.support.test:runner:$dpc.testRunner"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$dpc.express"
    annotationProcessor "com.alibaba:arouter-compiler:$dpc.arouterCompiler"
//    annotationProcessor "com.google.dagger:dagger-android-processor:$dpc.daggerAndroidProcessor"
    annotationProcessor "com.google.dagger:dagger-compiler:$dpc.daggerCompiler"
}
